# Problems

## Limit of clients.

Since two new threads are spawned per each connection it is pretty heavy on
processing power. For this reason a limit on the amount of clients had to
be introduced. 

## Easy join/quit flooding and message flooding.

Annoying for other clients.

## Clients with same nick are allowed.

Possible confusion between clients could occur.

## No differentiating between timeouts, disconnects and chat client exited.

With the current implemention it is not possible to detect:

   - timeouts
   - disconnects
   - chat cliented exited.
  
It would be better to introduce a PING/PONG system where by the server pings
each client at a set interval to check if they are alive. If they fail to reply
with a pong it will assume they have timed out.

The current implemention just detects disconnects. A disconnect is picked up
when the input stream on the producer starts firing off null values.

There is no way to send a command to the server to quit and the chat applets
exit method doesn't attempt to make such a call.

All of the above is implemented within RFC 1459.

## Chat applet doesn't wrap text.

Long lines of texted are not wrapped in the chat applet and inserting a long
line of text results in a horizontal scroll occuring.

## Chat applet doesn't handle disconnects well.

The chat applet has a while true loop for the stream of data from the server.
This should be something like while br.readLine() != null 